<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_valkyrie</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>count = 0;
global.colour_rainbow = 0;
global.colour_angle = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.colour_rainbow += 1;
if (global.colour_rainbow &gt;= 255) global.colour_rainbow -= 255;
global.colour_angle += 1;
if (global.colour_angle &gt;= 360) global.colour_angle -= 360;

count++;
if (count == 20) count = 0;

if(count == 5 || count == 10 || count == 15 || count == 0){

    shot1 = instance_create(x, y, obj_valkyrie_shot);
    shot1.direction = 0 + count;
    shot1.image_angle = shot1.direction;
    
    shot2 = instance_create(x, y, obj_valkyrie_shot);
    shot2.direction = 20 + count;
    shot2.image_angle = shot1.direction;
    
    shot3 = instance_create(x, y, obj_valkyrie_shot);
    shot3.direction = 40 + count;
    shot3.image_angle = shot1.direction;
    
    shot4 = instance_create(x, y, obj_valkyrie_shot);
    shot4.direction = 60 + count;
    shot4.image_angle = shot1.direction;
    
    shot5 = instance_create(x, y, obj_valkyrie_shot);
    shot5.direction = 80 + count;
    shot5.image_angle = shot1.direction;
    
    shot6 = instance_create(x, y, obj_valkyrie_shot);
    shot6.direction = 100 + count;
    shot6.image_angle = shot1.direction;
    
    shot7 = instance_create(x, y, obj_valkyrie_shot);
    shot7.direction = 120 + count;
    shot7.image_angle = shot1.direction;
    
    shot8 = instance_create(x, y, obj_valkyrie_shot);
    shot8.direction = 140 + count;
    shot8.image_angle = shot1.direction;
    
    shot9 = instance_create(x, y, obj_valkyrie_shot);
    shot9.direction = 160 + count;
    shot9.image_angle = shot1.direction;
    
    shot10 = instance_create(x, y, obj_valkyrie_shot);
    shot10.direction = 180 + count;
    shot10.image_angle = shot1.direction;
    
    shot11 = instance_create(x, y, obj_valkyrie_shot);
    shot11.direction = 200 + count;
    shot11.image_angle = shot1.direction;
    
    shot12 = instance_create(x, y, obj_valkyrie_shot);
    shot12.direction = 220 + count;
    shot12.image_angle = shot1.direction;
    
    shot13 = instance_create(x, y, obj_valkyrie_shot);
    shot13.direction = 240 + count;
    shot13.image_angle = shot1.direction;
    
    shot14 = instance_create(x, y, obj_valkyrie_shot);
    shot14.direction = 260 + count;
    shot14.image_angle = shot1.direction;
    
    shot15 = instance_create(x, y, obj_valkyrie_shot);
    shot15.direction = 280 + count;
    shot15.image_angle = shot1.direction;
    
    shot16 = instance_create(x, y, obj_valkyrie_shot);
    shot16.direction = 300 + count;
    shot16.image_angle = shot1.direction;
    
    shot17 = instance_create(x, y, obj_valkyrie_shot);
    shot17.direction = 320 + count;
    shot17.image_angle = shot1.direction;
    
    shot18 = instance_create(x, y, obj_valkyrie_shot);
    shot18.direction = 340 + count;
    shot18.image_angle = shot1.direction;
    
    shot1_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot1_core.direction = 0 + count;
    shot1_core.image_angle = shot1.direction;
    
    shot2_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot2_core.direction = 20 + count;
    shot2_core.image_angle = shot1.direction;
    
    shot3_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot3_core.direction = 40 + count;
    shot3_core.image_angle = shot1.direction;
    
    shot4_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot4_core.direction = 60 + count;
    shot4_core.image_angle = shot1.direction;
    
    shot5_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot5_core.direction = 80 + count;
    shot5_core.image_angle = shot1.direction;
    
    shot6_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot6_core.direction = 100 + count;
    shot6_core.image_angle = shot1.direction;
    
    shot7_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot7_core.direction = 120 + count;
    shot7_core.image_angle = shot1.direction;
    
    shot8_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot8_core.direction = 140 + count;
    shot8_core.image_angle = shot1.direction;
    
    shot9_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot9_core.direction = 160 + count;
    shot9_core.image_angle = shot1.direction;
    
    shot10_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot10_core.direction = 180 + count;
    shot10_core.image_angle = shot1.direction;
    
    shot11_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot11_core.direction = 200 + count;
    shot11_core.image_angle = shot1.direction;
    
    shot12_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot12_core.direction = 220 + count;
    shot12_core.image_angle = shot1.direction;
    
    shot13_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot13_core.direction = 240 + count;
    shot13_core.image_angle = shot1.direction;
    
    shot14_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot14_core.direction = 260 + count;
    shot14_core.image_angle = shot1.direction;
    
    shot15_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot15_core.direction = 280 + count;
    shot15_core.image_angle = shot1.direction;
    
    shot16_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot16_core.direction = 300 + count;
    shot16_core.image_angle = shot1.direction;
    
    shot17_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot17_core.direction = 320 + count;
    shot17_core.image_angle = shot1.direction;
    
    shot18_core = instance_create(x, y, obj_valkyrie_shot_core);
    shot18_core.direction = 340 + count;
    shot18_core.image_angle = shot1.direction;
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
